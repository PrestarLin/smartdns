name: 定时编译并发布SmartDNS

# 触发条件：每天UTC时间0点运行，且支持手动触发
on:
  schedule:
    - cron: '0 0 * * *'  # 每天凌晨0点（UTC）执行，可根据需求调整
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # 定义需要编译的平台（根据build-pkg.sh支持的平台选择）
        platform: [debian, openwrt, linux, luci]
        # 定义架构（可根据实际需求扩展）
        arch: [x86-64, arm64, armhf]

    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'  # 拉取子模块（如有）

      - name: 安装编译依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev rustc cargo npm  # 基础依赖+Rust（UI需要）+Node.js（WebUI需要）

      - name: 编译SmartDNS
        run: |
          # 运行编译脚本，指定平台、架构，启用UI插件
          package/build-pkg.sh \
            --platform ${{ matrix.platform }} \
            --arch ${{ matrix.arch }} \
            --with-ui \
            --outputdir ./output

      - name: 保存编译产物
        uses: actions/upload-artifact@v3
        with:
          name: smartdns-${{ matrix.platform }}-${{ matrix.arch }}
          path: ./output/*.tar.gz  # 根据实际生成的包格式调整（可能是.ipk/.deb等）

  release:
    needs: build  # 依赖build任务完成
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'  # 仅定时任务触发发布
    steps:
      - name: 下载所有编译产物
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts  # 所有产物会下载到artifacts目录

      - name: 创建GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: auto-build-${{ github.sha }}  # 用commit哈希作为版本标签
          name: 自动构建-${{ now('YYYY-MM-DD') }}  # 发布名称包含日期
          body: 自动定时编译的SmartDNS安装包
          files: ./artifacts/**/*.tar.gz  # 上传所有编译产物
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 自动生成的token，无需手动配置
